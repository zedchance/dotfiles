" Syntax highlighting
syntax on
set cursorline

" ruler
set ruler

" Spaces instead of tabs
set softtabstop=4
set shiftwidth=4
set tabstop=4
set expandtab

" Automatically indent on a new line
set autoindent

" Turn mouse on
set mouse=a

" Line numbers and wrap
set number
set nowrap

" cursor
let &t_ti.="\e[1 q"
let &t_SI.="\e[5 q"
let &t_EI.="\e[1 q"
let &t_te.="\e[0 q"
let &t_SR.="\e[3 q"

" encoding
set encoding=utf-8

" backspace setting
set backspace=2
imap <A-BS> <C-w>

" Clipboard
set clipboard=unnamed

" Keep lines below and above cursor
set scrolloff=8

" Scroll horizontally 1 char at a time
set sidescroll=1
set sidescrolloff=4

" Highlight searches
set hlsearch

" split chars
set fillchars+=vert:\ 

" open file to last place
au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif

" Plugins
call plug#begin('~/.vim/plugged')

" code completer
Plug 'ycm-core/YouCompleteMe'
let g:ycm_autoclose_preview_window_after_completion = 1
let g:ycm_filetype_blacklist = { 'tex': 1, 'markdown': 1 }
let g:ycm_key_list_select_completion = []
let g:ycm_key_list_previous_completion = []

" git diff in gutter
Plug 'airblade/vim-gitgutter'

" auto aligner
Plug 'junegunn/vim-easy-align'
" Start interactive EasyAlign in visual mode (e.g. vipga)
xmap ga <Plug>(EasyAlign)
" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)
" remap :E to :Explore, because the above plugin has ambiguous command :EasyAlign
command! E Explore
let g:easy_align_delimiters = {
\ '/': {
\     'pattern':         '//\+\|/\*\|\*/',
\     'delimiter_align': 'l',
\     'ignore_groups':   ['!Comment'] },
\ }

call plug#end()

" colorscheme
colorscheme akintoij

" move between panes to left/bottom/top/right
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

